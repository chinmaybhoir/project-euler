"""
Problem 29
==========


   Consider all integer combinations of a^b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

     2^2=4, 2^3=8, 2^4=16, 2^5=32
     3^2=9, 3^3=27, 3^4=81, 3^5=243
     4^2=16, 4^3=64, 4^4=256, 4^5=1024
     5^2=25, 5^3=125, 5^4=625, 5^5=3125

   If they are then placed in numerical order, with any repeats removed, we
   get the following sequence of 15 distinct terms:

        4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

   How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤
   100 and 2 ≤ b ≤ 100?

   
   Answer: 6f0ca67289d79eb35d19decbc0a08453

"""
def get_sequence(a_limit, b_limit):
  sequence = set()
  for a in range(2,a_limit + 1):
    for b in range(2, b_limit + 1):
      num = a ** b
      sequence.add(num)
  return sequence
if __name__=='__main__':
  sequence = get_sequence(100,100)
  print(len(sequence))